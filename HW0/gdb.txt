GDB Practice:

آ.

gdb ./map

ب.

break main

ج.

run

د.

print argv
$1 = (char **) 0x7fffffffe528

print *argv
$2 = 0x7fffffffe751 "/home/vagrant/code/personal/HW0/map"

به مسیر فایل اجرایی اشاره می‌کند

ه.

print argv
$1 = (char **) 0x7fffffffe528

و.

next
next
next

ز.

info address recur
Symbol "recur" is a function at address 0x5555555546cd.

ح.

step

ط.

next
next

ی.

disassemble
Dump of assembler code for function recur:
   0x00005555555546cd <+0>:     push   %rbp
   0x00005555555546ce <+1>:     mov    %rsp,%rbp
   0x00005555555546d1 <+4>:     sub    $0x20,%rsp
   0x00005555555546d5 <+8>:     mov    %edi,-0x14(%rbp)
   0x00005555555546d8 <+11>:    mov    -0x14(%rbp),%eax
   0x00005555555546db <+14>:    mov    %eax,-0x4(%rbp)
   0x00005555555546de <+17>:    mov    -0x14(%rbp),%eax
   0x00005555555546e1 <+20>:    mov    %eax,%esi
   0x00005555555546e3 <+22>:    lea    0xaa(%rip),%rdi        # 0x555555554794
   0x00005555555546ea <+29>:    mov    $0x0,%eax
   0x00005555555546ef <+34>:    callq  0x555555554550 <printf@plt>
=> 0x00005555555546f4 <+39>:    cmpl   $0x0,-0x14(%rbp)
   0x00005555555546f8 <+43>:    jle    0x555555554709 <recur+60>
   0x00005555555546fa <+45>:    mov    -0x14(%rbp),%eax
   0x00005555555546fd <+48>:    sub    $0x1,%eax
   0x0000555555554700 <+51>:    mov    %eax,%edi
   0x0000555555554702 <+53>:    callq  0x5555555546cd <recur>
   0x0000555555554707 <+58>:    jmp    0x55555555470e <recur+65>
   0x0000555555554709 <+60>:    mov    $0x0,%eax
   0x000055555555470e <+65>:    leaveq
   0x000055555555470f <+66>:    retq
End of assembler dump.

ک

nexti
nexti
nexti
nexti
nexti

ل.

info all-registers
rax            0x2      2
rbx            0x0      0
rcx            0x0      0
rdx            0x0      0
rsi            0x555555756340   93824994337600
rdi            0x2      2
rbp            0x7fffffffe400   0x7fffffffe400
rsp            0x7fffffffe3e0   0x7fffffffe3e0
r8             0x0      0
r9             0x0      0
r10            0x555555756010   93824994336784
r11            0x246    582
r12            0x555555554580   93824992232832
r13            0x7fffffffe520   140737488348448
r14            0x0      0
r15            0x0      0
rip            0x555555554702   0x555555554702 <recur+53>
eflags         0x202    [ IF ]
cs             0x33     51
ss             0x2b     43
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
st0            0        (raw 0x00000000000000000000)
st1            0        (raw 0x00000000000000000000)
st2            0        (raw 0x00000000000000000000)
st3            0        (raw 0x00000000000000000000)
st4            0        (raw 0x00000000000000000000)

م.

stepi

ن.

ctrl + x + a

س.

backtrace

ع.

break recur if i == 0

ف.

continue

ص.

backtrace
#0  recur (i=0) at recurse.c:5
#1  0x0000555555554707 in recur (i=1) at recurse.c:9
#2  0x0000555555554707 in recur (i=2) at recurse.c:9
#3  0x0000555555554707 in recur (i=3) at recurse.c:9
#4  0x00005555555546c6 in main (argc=1, argv=0x7fffffffe528) at map.c:23

ق.

1

ر.

next
next
next

ش.

layout asm

ت.

0x555555554709 <recur+60>               mov    $0x0,%eax

ث.

layout src

خ.

next
next
next

ذ.

continue

ض.

quit
